package schema;

import java.util.HashMap;
import java.util.Map;

import javax.persistence.Persistence;

public class Schema {
	public static void main(String... args) throws Exception {
/*

DDL generation

In previous versions for JPA, although DDL generation was present it was not standardized or required. JPA 2.1 has added standardized provider DDL generation and made DDL generation a requirement. 

A summary of the enabling DDL properties are as follows: 
• javax.persistence.schema-generation.database.action ◦ specifies the action to be taken by the citationStore provider with regard to the database artifacts
  ◦ Valid values for this property: none, create, drop-and-create, drop

• javax.persistence.schema-generation.scripts.action ◦ specifies which scripts are to be generated by the citationStore provider
  ◦ Valid values for this property: none, create, drop-and-create, drop

• javax.persistence.schema-generation.create-source ◦ specifies whether the creation of database artifacts is to occur on the basis of the object/relational mapping metadata, DDL script, or a combination of the two.
  ◦ Valid values for this property: metadata, script, metadata-then-script, script-then-metadata

• javax.persistence.schema-generation.drop-source ◦ specifies whether the dropping of database artifacts is to occur on the basis of the object/relational mapping metadata, DDL script, or a combination of the two.
  ◦ Valid values for this property: metadata, script, metadata-then-script, script-then-metadata

• javax.persistence.schema-generation.create-database-schemas 
  ◦ specifies whether the citationStore provider is to create the database schema(s) in addition to creating database objects such as tables, sequences, constraints, etc.

• javax.persistence.schema-generation.scripts.create-target 
  ◦ specifies a java.IO.Writer configured for use by the citationStore provider for output of the DDL script or a string specifying the file URL for the DDL script.

• javax.persistence.schema-generation.scripts.drop-target 
  ◦ specifies a java.IO.Writer configured for use by the citationStore provider for output of the DDL script or a string specifying the file URL for the DDL script.

• javax.persistence.database-product-name ◦ specified if scripts are to be generated by the citationStore provider and a connection to the target database is not supplied.
  ◦ The value of this property should be the value returned for the target database by the JDBC DatabaseMetaData method getDatabaseProductName.

• javax.persistence.database-major-version ◦ specified if sufficient database version information is not included from the JDBC DatabaseMetaData method getDatabaseProductName.
  ◦ This value of this property should contain the value returned by the JDBC getDatabaseMajor-Version method.

• javax.persistence.database-minor-version ◦ specified if sufficient database version information is not included from the JDBC DatabaseMetaData method getDatabaseProductName.
  ◦ This value of this property should contain the value returned by the JDBC getDatabaseMinor-Version method.

• javax.persistence.schema-generation.create-script-source 
  ◦ specifies a java.IO.Reader configured for reading of the DDL script or a string designating a file URL for the DDL script.

• javax.persistence.schema-generation.drop-script-source ◦ specifies a java.IO.Reader configured for reading of the DDL script or a string designating a file URL for the DDL script.

• javax.persistence.schema-generation.connection 
  ◦ specifies the JDBC connection to be used for schema generation. This is intended for use in Java EE environments, where the platform provider may want to control the database privileges that are available to the citationStore provider.

• javax.persistence.sql-load-script-source 
  ◦ specifies a java.IO.Reader configured for reading of the SQL load script for database initialization or a string designating a file URL for the script.


 		
 */
		Map<String,Object> properties = new HashMap<String,Object>();
		properties.put("javax.persistence.database-product-name", "PostgreSQL");
		properties.put("javax.persistence.database-major-version", 9);
		properties.put("javax.persistence.database-minor-version", 3);
		properties.put("javax.persistence.schema-generation.connection", "jdbc:postgresql://localhost:3306/op?user=adminwg1gkjx&password=P79Z7WItQ2aH");
		properties.put("javax.persistence.schema-generation.scripts.action", "drop-and-create");
		properties.put("javax.persistence.schema-generation.scripts.drop-target", "opee-drop-script");
		properties.put("javax.persistence.schema-generation.scripts.create-target", "opee-create-script");
		    
		Persistence.generateSchema("opjpa", properties);
		
		System.exit(0);
	}
}


/*


Allowed Values

Description

javax.persistence.schema-generation.database.action 
	none, create, drop-and-create, 
	drop Defines whether the citationStore provider shall create the database, first drop and then recreate it, only drop it or do nothing at all.
 	If this property is not provided, no schema will be created. 

javax.persistence.schema-generation.scripts.action 
	none, create, drop-and-create, drop 
	Defines which scripts the citationStore provider shall create.
 	A script target needs to be defined for each script to be created. 

javax.persistence.schema-generation.create-source 
	metadata, script, metadata-then-script, script-then-metadata 
	Defines how the schema shall be created. It can be done based on the mapping metadata, a script or a combination of both.
 	If this parameter is not provided, the citationStore provider will use only the mapping metadata or a script, if the javax.persistence.schema-generation.create-script-source property is defined. 

javax.persistence.schema-generation.drop-source 
	metadata, script, metadata-then-script, script-then-metadata 
	Defines how the schema shall be dropped. It can be done based on the mapping metadata, a script or a combination of both.
 	If this parameter is not provided, the citationStore provider will use only the mapping metadata or a script, if the javax.persistence.schema-generation.drop-script-source property is defined. 

javax.persistence.schema-generation.create-database-schemas 
	true, false 
	Defines if the citationStore provider shall also create the required database schemas or only the other database objects like tables, sequences, etc..
 	This property defaults to false. 

javax.persistence.schema-generation.scripts.create-target 
	file URL, java.IO.Writer 
	Defines the target location of the create script generated by the citationStore provider.
	 
javax.persistence.schema-generation.scripts.drop-target 
	file URL, java.IO.Writer 
	Defines the target location of the drop script generated by the citationStore provider. 

javax.persistence.database-product-name 
	String 
	The name of the target database as it is returned by the JDBC DatabaseMetaData method getDatabaseProductName. This parameter is required, if the citationStore provider shall create scripts without a connection to the database. 

javax.persistence.database-major-version 
	String 
	The major version of the target database as it is returned by the JDBC getDatabaseMajorVersion method. 

javax.persistence.database-minor-version 
	String 
	The minor version of the target database as it is returned by the JDBC getDatabaseMinorVersion method. 

javax.persistence.schema-generation.create-script-source 
	file URL, java.IO.Writer 
	Defines the location of the create script. 
	This parameter has to be defined, if the javax.persistence.schema-generation.create-source property was set to script, metadata-then-script or script-then-metadata. 

javax.persistence.schema-generation.drop-script-source 
	file URL, java.IO.Writer 
	Defines the location of the drop script. 
	This parameter has to be defined, if the javax.persistence.schema-generation.drop-source property was set to script, metadata-then-script or script-then-metadata. 

javax.persistence.schema-generation.connection 
	String Specifies the JDBC connection that shall be used to create the database.
	 
javax.persistence.sql-load-script-source 
	file URL, java.IO.Writer 
	Defines the location of the SQL script that shall be  

*/